{"id":"JN0q","dependencies":[{"name":"/home/frama/Bureau/Projects/ComponentsAPI/package.json","includedInParent":true,"mtime":1666034613385}],"generated":{"js":"exports.createArr=function(t){var e;return\"string\"==typeof t&&(e=t.split(\"\\n\")),e},exports.preventDefaults=function(t){t.preventDefault(),t.stopPropagation(),t.dataTransfer.effectAllowed=\"All\"};"},"sourceMaps":{"js":{"mappings":[{"source":"../utils.js","name":"exports","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../utils.js","name":"createArr","original":{"line":1,"column":8},"generated":{"line":1,"column":8}},{"source":"../utils.js","original":{"line":1,"column":20},"generated":{"line":1,"column":18}},{"source":"../utils.js","name":"data","original":{"line":1,"column":30},"generated":{"line":1,"column":27}},{"source":"../utils.js","original":{"line":3,"column":2},"generated":{"line":1,"column":30}},{"source":"../utils.js","name":"componentData","original":{"line":3,"column":6},"generated":{"line":1,"column":34}},{"source":"../utils.js","original":{"line":6,"column":2},"generated":{"line":1,"column":36}},{"source":"../utils.js","original":{"line":4,"column":18},"generated":{"line":1,"column":42}},{"source":"../utils.js","name":"data","original":{"line":4,"column":9},"generated":{"line":1,"column":59}},{"source":"../utils.js","name":"componentData","original":{"line":4,"column":30},"generated":{"line":1,"column":63}},{"source":"../utils.js","name":"data","original":{"line":4,"column":46},"generated":{"line":1,"column":65}},{"source":"../utils.js","name":"split","original":{"line":4,"column":51},"generated":{"line":1,"column":67}},{"source":"../utils.js","original":{"line":4,"column":57},"generated":{"line":1,"column":73}},{"source":"../utils.js","name":"componentData","original":{"line":6,"column":9},"generated":{"line":1,"column":80}},{"source":"../utils.js","name":"exports","original":{"line":9,"column":0},"generated":{"line":1,"column":83}},{"source":"../utils.js","name":"preventDefaults","original":{"line":9,"column":8},"generated":{"line":1,"column":91}},{"source":"../utils.js","original":{"line":9,"column":26},"generated":{"line":1,"column":107}},{"source":"../utils.js","name":"e","original":{"line":9,"column":27},"generated":{"line":1,"column":116}},{"source":"../utils.js","name":"e","original":{"line":10,"column":2},"generated":{"line":1,"column":119}},{"source":"../utils.js","name":"preventDefault","original":{"line":10,"column":4},"generated":{"line":1,"column":121}},{"source":"../utils.js","name":"e","original":{"line":11,"column":2},"generated":{"line":1,"column":138}},{"source":"../utils.js","name":"stopPropagation","original":{"line":11,"column":4},"generated":{"line":1,"column":140}},{"source":"../utils.js","name":"e","original":{"line":12,"column":2},"generated":{"line":1,"column":158}},{"source":"../utils.js","name":"dataTransfer","original":{"line":12,"column":4},"generated":{"line":1,"column":160}},{"source":"../utils.js","name":"effectAllowed","original":{"line":12,"column":17},"generated":{"line":1,"column":173}},{"source":"../utils.js","original":{"line":12,"column":33},"generated":{"line":1,"column":187}}],"sources":{"../utils.js":"exports.createArr = function (data) {\n  // check the typeof input data and spread in an object\n  let componentData;\n  typeof data === \"string\" ? (componentData = data.split(\"\\n\")) : \"\";\n  // : (componentData = data.split(\"\"));\n  return componentData;\n};\n\nexports.preventDefaults = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  e.dataTransfer.effectAllowed = \"All\";\n};\n\n// exports.loadState = async function (type, input) {\n//   return new Promise((resolve, reject) => {\n//     try {\n//       const reader = new FileReader();\n//       if (type === \"drop\") {\n//         const data = state.fileItem[0];\n//         for (let i = 0; i < data.length; i++) {\n//           if (data[i].kind === \"file\") {\n//             const file = data[i].getAsFile();\n//             reader.onload = async function (e) {\n//               resolve((state.partNumber = createArr(e.target.result)));\n//               console.log(state.partNumber);\n//             };\n//             reader.readAsText(file);\n//           }\n//         }\n//       }\n//       if (type === \"submit\") {\n//         reader.onload = async function (e) {\n//           resolve((state.partNumber = createArr(e.target.result)));\n//         };\n//         reader.readAsText(input.files[0]);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   });\n// };\n"},"lineCount":null}},"error":null,"hash":"7e914e41d1f20193860b3dc15944010e","cacheData":{"env":{}}}